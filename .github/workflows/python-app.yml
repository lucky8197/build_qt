# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build Qt OHOS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-2025, windows-2022, ubuntu-24.04, ubuntu-22.04, macos-26, macos-15, macos-14 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: build
        run: |
          python ./build-qt-ohos.py --init
          python ./build-qt-ohos.py --exe_stage all --with_pack
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.os }}
          path: |
            work/output/*.zip
            work/output/*.tar.gz

      - name: Generate timestamp and sign for DingTalk
        id: dingtalk_sign
        if: always()
        run: |
          import hashlib
          import hmac
          import base64
          import time
          secret = '${{ secrets.DINGTALK_SECRET }}'
          timestamp = str(round(time.time() * 1000))
          string_to_sign = f'{timestamp}\n{secret}'
          hmac_code = hmac.new(
              secret.encode('utf-8'),
              string_to_sign.encode('utf-8'),
              hashlib.sha256
          ).digest()
          sign = base64.b64encode(hmac_code).decode('utf-8')
          print(f'timestamp={timestamp}')
          print(f'sign={sign}')
        shell: python3

      - name: Send DingTalk Notification
        if: always()
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.DINGTALK_WEBHOOK }}
          method: 'POST'
          contentType: 'application/json'
          body: |
            {
              "msgtype": "text",
              "text": {
                "content": "【Qt OHOS 构建通知】\n状态: ${{ job.status }}\n平台: ${{ matrix.os }}\n分支: ${{ github.ref }}\n触发者: ${{ github.actor }}\n详情: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              },
              "timestamp": ${{ steps.dingtalk_sign.outputs.timestamp }},
              "sign": "${{ steps.dingtalk_sign.outputs.sign }}"
            }
        continue-on-error: true